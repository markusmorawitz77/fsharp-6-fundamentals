List.map;;

List.map (fun x -> x*2) [1;2;3]

(|>) 
let (|>) = x f = f x 

[1;2;3] |> List.map (fun x -> x*2)

//================================================================================

[1..4]
    |> List.filter (fun i -> i % 2 = 0) 
    |> List.map ((*) 2) 
    |> List.sum

//================================================================================

List.sum (
    List.map ((*) 2) (
        List.filter (fun i -> i % 2 = 0) [1..4]
    ) 
)

//================================================================================

sin 2. + 1.
sin (2. + 1.)
sin <| 2. + 1.

min 15 8
15 |> min |< 8

//================================================================================

min
min 15 8

(||>)
(<||)

min
min 15 8

(15, 8) ||> min
min <|| (15,8)

let aTermult3nary a b c = a * b * c
(2, 4, 8) |||> mult
mult3 <||| (2, 4, 8)



